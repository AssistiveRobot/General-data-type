Arduino Uno and ROS Communication

This project demonstrates how to establish communication between an Arduino Uno and ROS (Robot Operating System) for exchanging boolean data. The Arduino handles low-level hardware interactions, while ROS manages higher-level communication and processing.

Setup Steps

Install rosserial on your ROS environment:

sudo apt-get install ros-noetic-rosserial ros-noetic-rosserial-arduino


Upload Arduino code:

Write an Arduino sketch that subscribes/publishes to ROS topics (e.g., a boolean message).

Example: Arduino reads a button state and publishes true/false to ROS.

Connect Arduino to ROS:
Run the following command to start the serial communication:

rosrun rosserial_python serial_node.py _port:=/dev/ttyUSB0 _baud:=57600


(Change /dev/ttyUSB0 to your Arduinoâ€™s port if different).

Check Topics:
In another terminal, list topics to confirm communication:

rostopic list


Send/Receive Data:

To publish boolean data to Arduino from ROS:

rostopic pub /led_control std_msgs/Bool "data: true"


To receive boolean data from Arduino in ROS:

rostopic echo /button_state
